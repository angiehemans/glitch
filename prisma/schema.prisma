// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  name          String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  posts         Post[]
  subscriptions Subscription[]
}

model Post {
  id        String   @id @default(cuid())
  title     String?
  content   String
  published Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model BlogSettings {
  id              String   @id @default(cuid())
  title           String   @default("My Blog")
  description     String   @default("A personal blog with thoughts and ideas")
  language        String   @default("en-us")
  managingEditor  String   @default("Blog Admin")
  webMaster       String   @default("Blog Admin")
  generator       String   @default("Glitch RSS")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model RssFeed {
  id            String         @id @default(cuid())
  url           String         @unique
  title         String
  description   String?
  lastFetchedAt DateTime?
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscriptions Subscription[]
  feedItems     FeedItem[]
}

model Subscription {
  id       String  @id @default(cuid())
  userId   String
  feedId   String
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  feed     RssFeed @relation(fields: [feedId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, feedId])
}

model FeedItem {
  id          String   @id @default(cuid())
  feedId      String
  title       String
  description String?
  link        String
  pubDate     DateTime?
  guid        String?
  createdAt   DateTime @default(now())
  feed        RssFeed  @relation(fields: [feedId], references: [id], onDelete: Cascade)

  @@unique([feedId, guid])
}
